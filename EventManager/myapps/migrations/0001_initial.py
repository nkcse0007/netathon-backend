# Generated by Django 4.1.7 on 2023-03-18 13:57

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserLoginInfo',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when this entry was created in the system')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the table data was last updated in the system')),
                ('auth_type', models.CharField(choices=[('EMAIL', 'EMAIL_LOGIN_TYPE'), ('PHONE', 'PHONE_LOGIN_TYPE'), ('GOOGLE', 'GOOGLE_LOGIN_TYPE'), ('LINKEDIN', 'LINKEDIN_LOGIN_TYPE'), ('FACEBOOK', 'FACEBOOK_LOGIN_TYPE')], help_text='Type of authentication.', max_length=15)),
                ('parent', models.TextField(blank=True, default='')),
                ('role', models.CharField(choices=[('SUPER_ADMIN', 'SUPER_ADMIN_ROLE_TYPE'), ('AGENCY', 'AGENCY_ROLE_TYPE'), ('ORGANIZATION', 'ORGANIZATION_ROLE_TYPE'), ('AGENCY_USER', 'AGENCY_USER_ROLE_TYPE'), ('STORE', 'STORE_ROLE_TYPE'), ('USER', 'USER_ROLE_TYPE')], help_text='Type of role.', max_length=15)),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('password', models.TextField()),
                ('phone', models.CharField(blank=True, default='', max_length=10)),
                ('phone_code', models.CharField(blank=True, default='', max_length=14)),
                ('social_id', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('is_verified', models.BooleanField(default=False, help_text='Toggles verification status for a user.')),
                ('is_deleted', models.BooleanField(default=False, help_text='Toggles soft delete status for a user.')),
                ('is_active', models.BooleanField(default=True, help_text='Toggles active status for a user.')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates the user as a staff member.')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates the user as a super user.')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'User Login Information',
                'db_table': 'user_login_info_model',
            },
        ),
        migrations.CreateModel(
            name='LanguageModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when this entry was created in the system')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the table data was last updated in the system')),
                ('title', models.CharField(default='English', max_length=20)),
                ('code', models.CharField(default='en', max_length=5)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrganizationModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when this entry was created in the system')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the table data was last updated in the system')),
                ('title', models.CharField(max_length=30)),
                ('intro', models.TextField(blank=True, default='')),
                ('domain', models.URLField(blank=True)),
                ('theme', models.CharField(blank=True, default='', max_length=30)),
                ('logo', models.URLField(blank=True)),
                ('images', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True), blank=True, default=list, null=True, size=None)),
                ('address', models.CharField(blank=True, default='', max_length=30)),
                ('city', models.CharField(blank=True, default='', max_length=30)),
                ('country', models.CharField(blank=True, default='', max_length=30)),
                ('pin', models.CharField(blank=True, default='', max_length=30)),
                ('establish_date', models.DateTimeField(blank=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Organization Info',
                'verbose_name_plural': 'Organization Information',
                'db_table': 'organization_model',
            },
        ),
        migrations.CreateModel(
            name='PermissionsModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when this entry was created in the system')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the table data was last updated in the system')),
                ('title', models.CharField(max_length=20)),
                ('role', models.CharField(choices=[('SUPER_ADMIN', 'SUPER_ADMIN_ROLE_TYPE'), ('AGENCY', 'AGENCY_ROLE_TYPE'), ('ORGANIZATION', 'ORGANIZATION_ROLE_TYPE'), ('AGENCY_USER', 'AGENCY_USER_ROLE_TYPE'), ('STORE', 'STORE_ROLE_TYPE'), ('USER', 'USER_ROLE_TYPE')], help_text='Type of role.', max_length=15)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfileModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when this entry was created in the system')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the table data was last updated in the system')),
                ('name', models.CharField(max_length=30)),
                ('profile_summary', models.CharField(blank=True, default='', max_length=30)),
                ('profile_image', models.URLField(blank=True, default='')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Info',
                'verbose_name_plural': 'User Information',
                'db_table': 'user_model',
            },
        ),
        migrations.CreateModel(
            name='UserLocationModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when this entry was created in the system')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the table data was last updated in the system')),
                ('is_default_location', models.BooleanField(default=False)),
                ('offer_radius', models.IntegerField(default=3)),
                ('location_type', models.CharField(choices=[('HOME_LOCATION', 'HOME_LOCATION_TYPE'), ('OFFICE_LOCATION', 'OFFICE_LOCATION_TYPE'), ('OTHER_LOCATION', 'OTHER_LOCATION_TYPE')], default='HOME_LOCATION', max_length=30)),
                ('other_location_title', models.CharField(blank=True, default='', max_length=30)),
                ('address', models.CharField(blank=True, default='', max_length=30)),
                ('city', models.CharField(blank=True, default='', max_length=30)),
                ('country', models.CharField(blank=True, default='', max_length=30)),
                ('pin', models.CharField(blank=True, default='', max_length=30)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Location',
                'verbose_name_plural': 'User Locations',
                'db_table': 'location_model',
            },
        ),
        migrations.CreateModel(
            name='StoreModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when this entry was created in the system')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the table data was last updated in the system')),
                ('title', models.CharField(max_length=30)),
                ('intro', models.CharField(blank=True, default='', max_length=30)),
                ('domain', models.URLField(blank=True)),
                ('theme', models.CharField(blank=True, default='', max_length=30)),
                ('logo', models.URLField(blank=True)),
                ('images', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True), blank=True, default=list, null=True, size=None)),
                ('address', models.CharField(blank=True, default='', max_length=30)),
                ('city', models.CharField(blank=True, default='', max_length=30)),
                ('country', models.CharField(blank=True, default='', max_length=30)),
                ('pin', models.CharField(blank=True, default='', max_length=30)),
                ('establish_date', models.DateTimeField(blank=True)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='myapps.organizationmodel')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Store_Info',
                'verbose_name_plural': 'Store Information',
                'db_table': 'store_model',
            },
        ),
        migrations.AddField(
            model_name='userlogininfo',
            name='language',
            field=models.ManyToManyField(blank=True, help_text='Language of user', to='myapps.languagemodel'),
        ),
        migrations.AddField(
            model_name='userlogininfo',
            name='permissions',
            field=models.ManyToManyField(blank=True, help_text='Permission of user', to='myapps.permissionsmodel'),
        ),
        migrations.AddField(
            model_name='userlogininfo',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
